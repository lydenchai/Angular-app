{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/material/sidenav\";\nimport * as i3 from \"@angular/material/list\";\nexport class ContainerComponent {\n  constructor() {\n    this.sideBarOpen = true;\n    this.desktopViewWidth = 1100;\n    this.drawerMode = \"side\";\n    this.drawerOpenChangeHandler = opened => {\n      this.sideBarOpen = opened;\n    };\n  }\n  onResize(width) {\n    if (width < this.desktopViewWidth) {\n      this.drawerMode = \"over\";\n      if (this.sideBarOpen) {\n        this.sideBarOpen = false;\n      }\n    } else {\n      this.drawerMode = \"side\";\n      if (!this.sideBarOpen) {\n        this.sideBarOpen = true;\n      }\n    }\n  }\n  sideBarToggler() {\n    this.sideBarOpen = !this.sideBarOpen;\n  }\n  static #_ = this.ɵfac = function ContainerComponent_Factory(t) {\n    return new (t || ContainerComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ContainerComponent,\n    selectors: [[\"app-container\"]],\n    hostBindings: function ContainerComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"resize\", function ContainerComponent_resize_HostBindingHandler($event) {\n          return ctx.onResize($event.target.innerWidth);\n        }, false, i0.ɵɵresolveWindow);\n      }\n    },\n    decls: 5,\n    vars: 2,\n    consts: [[3, \"mode\", \"opened\", \"openedChange\"], [\"mat-list-item\", \"\", \"routerLinkActive\", \"list-item-active\"]],\n    template: function ContainerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-drawer-container\")(1, \"mat-drawer\", 0);\n        i0.ɵɵlistener(\"openedChange\", function ContainerComponent_Template_mat_drawer_openedChange_1_listener($event) {\n          return ctx.drawerOpenChangeHandler($event);\n        });\n        i0.ɵɵelementStart(2, \"mat-nav-list\")(3, \"a\", 1);\n        i0.ɵɵtext(4, \"HI\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"mode\", ctx.drawerMode)(\"opened\", ctx.sideBarOpen);\n      }\n    },\n    dependencies: [i1.RouterLinkActive, i2.MatDrawer, i2.MatDrawerContainer, i3.MatNavList, i3.MatListItem],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":";;;;AAOA,OAAM,MAAOA,kBAAkB;EAL/BC;IAME,gBAAW,GAAG,IAAI;IAClB,qBAAgB,GAAW,IAAI;IAC/B,eAAU,GAAoB,MAAM;IAmBpC,4BAAuB,GAAIC,MAAe,IAAI;MAC5C,IAAI,CAACC,WAAW,GAAGD,MAAM;IAC3B,CAAC;;EAnBDE,QAAQ,CAACC,KAAa;IACpB,IAAIA,KAAK,GAAG,IAAI,CAACC,gBAAgB,EAAE;MACjC,IAAI,CAACC,UAAU,GAAG,MAAM;MACxB,IAAI,IAAI,CAACJ,WAAW,EAAE;QACpB,IAAI,CAACA,WAAW,GAAG,KAAK;;KAE3B,MAAM;MACL,IAAI,CAACI,UAAU,GAAG,MAAM;MACxB,IAAI,CAAC,IAAI,CAACJ,WAAW,EAAE;QACrB,IAAI,CAACA,WAAW,GAAG,IAAI;;;EAG7B;EACAK,cAAc;IACZ,IAAI,CAACL,WAAW,GAAG,CAAC,IAAI,CAACA,WAAW;EACtC;EAAC;qBApBUH,kBAAkB;EAAA;EAAA;UAAlBA,kBAAkB;IAAAS;IAAAC;MAAA;;iBAAlBC,sCACA;QAAA;;;;;;;;QCAbC,4CAAsB;QAIlBA;UAAA,OAAgBD,mCAA+B;QAAA,EAAC;QAEhDC,oCAAc;QACyCA,kBAAE;QAAAA,iBAAI;;;QAL7DA,eAAmB;QAAnBA,qCAAmB","names":["ContainerComponent","constructor","opened","sideBarOpen","onResize","width","desktopViewWidth","drawerMode","sideBarToggler","selectors","hostBindings","ctx","i0"],"sourceRoot":"","sources":["/Users/fedora/Desktop/Angular-app/src/app/components/container/container.component.ts","/Users/fedora/Desktop/Angular-app/src/app/components/container/container.component.html"],"sourcesContent":["import { Component, HostListener } from \"@angular/core\";\n\n@Component({\n  selector: \"app-container\",\n  templateUrl: \"./container.component.html\",\n  styleUrls: [\"./container.component.scss\"],\n})\nexport class ContainerComponent {\n  sideBarOpen = true;\n  desktopViewWidth: number = 1100;\n  drawerMode: \"side\" | \"over\" = \"side\";\n  @HostListener(\"window:resize\", [\"$event.target.innerWidth\"])\n  onResize(width: number) {\n    if (width < this.desktopViewWidth) {\n      this.drawerMode = \"over\";\n      if (this.sideBarOpen) {\n        this.sideBarOpen = false;\n      }\n    } else {\n      this.drawerMode = \"side\";\n      if (!this.sideBarOpen) {\n        this.sideBarOpen = true;\n      }\n    }\n  }\n  sideBarToggler() {\n    this.sideBarOpen = !this.sideBarOpen;\n  }\n\n  drawerOpenChangeHandler = (opened: boolean) => {\n    this.sideBarOpen = opened;\n  };\n}\n","<!-- <div>\n  <mat-toolbar>\n    <span>My Application</span>\n  </mat-toolbar>\n  <div class=\"px-4\">\n    <router-outlet></router-outlet>\n  </div>\n</div> -->\n<mat-drawer-container>\n  <mat-drawer\n    [mode]=\"drawerMode\"\n    [opened]=\"sideBarOpen\"\n    (openedChange)=\"drawerOpenChangeHandler($event)\"\n  >\n    <mat-nav-list>\n      <a mat-list-item routerLinkActive=\"list-item-active\">HI</a></mat-nav-list\n    ></mat-drawer\n  >\n</mat-drawer-container>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}